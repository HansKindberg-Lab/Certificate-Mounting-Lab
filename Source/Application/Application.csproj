<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<!-- Volumes -->

		<!-- Mounting the whole certificates folder. -->
		<!--<DockerfileRunArguments>-v "$(SolutionDir)Certificates:/etc/ssl/certs"</DockerfileRunArguments>-->

		<!-- Mounting separate certificates. -->
		<!--<DockerfileRunArguments>-v "$(SolutionDir)Certificates/root-certificate.crt:/etc/ssl/certs/root-certificate.crt:ro"</DockerfileRunArguments>
		<DockerfileRunArguments>$(DockerfileRunArguments) -v "$(SolutionDir)Certificates/intermediate-certificate-1.crt:/etc/ssl/certs/intermediate-certificate-1.crt:ro"</DockerfileRunArguments>
		<DockerfileRunArguments>$(DockerfileRunArguments) -v "$(SolutionDir)Certificates/intermediate-certificate-2.crt:/etc/ssl/certs/intermediate-certificate-2.crt:ro"</DockerfileRunArguments>-->

		<!-- Trying "/usr/local/share/ca-certificates". But maybe the command "update-ca-certificates" is necessary for this. -->
		<!--<DockerfileRunArguments>-v "$(SolutionDir)Certificates/root-certificate.crt:/usr/local/share/ca-certificates/root-certificate.crt:ro"</DockerfileRunArguments>
		<DockerfileRunArguments>$(DockerfileRunArguments) -v "$(SolutionDir)Certificates/intermediate-certificate-1.crt:/usr/local/share/ca-certificates/intermediate-certificate-1.crt:ro"</DockerfileRunArguments>
		<DockerfileRunArguments>$(DockerfileRunArguments) -v "$(SolutionDir)Certificates/intermediate-certificate-2.crt:/usr/local/share/ca-certificates/intermediate-certificate-2.crt:ro"</DockerfileRunArguments>-->

		<ImplicitUsings>enable</ImplicitUsings>
		<TargetFramework>net7.0</TargetFramework>
		<UserSecretsId>502816fc-be71-4e81-b942-71f6bbad0ec0</UserSecretsId>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.17.0" />
	</ItemGroup>
</Project>